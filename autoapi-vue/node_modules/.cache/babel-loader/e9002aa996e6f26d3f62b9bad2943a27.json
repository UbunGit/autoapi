{"remainingRequest":"/Users/admin/Documents/GitHub/autoapi/node_modules/babel-loader/lib/index.js!/Users/admin/Documents/GitHub/autoapi/node_modules/eslint-loader/index.js??ref--13-0!/Users/admin/Documents/GitHub/autoapi/src/autoapi/lib/core/app-configuration/index.js","dependencies":[{"path":"/Users/admin/Documents/GitHub/autoapi/src/autoapi/lib/core/app-configuration/index.js","mtime":1605245611951},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/cache-loader/dist/cjs.js","mtime":1603071031830},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/babel-loader/lib/index.js","mtime":1605088291697},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/eslint-loader/index.js","mtime":1603071032704}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4iKTsKCnZhciBfb2JqZWN0U3ByZWFkID0gcmVxdWlyZSgiL1VzZXJzL2FkbWluL0RvY3VtZW50cy9HaXRIdWIvYXV0b2FwaS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9vYmplY3RTcHJlYWQyIik7Cgp2YXIgbmV3TG9jYWwgPSAnZG90ZW52JzsKCnZhciBkb3RlbnYgPSByZXF1aXJlKG5ld0xvY2FsKTsKCmRvdGVudi5jb25maWcoewogIHBhdGg6IHByb2Nlc3MuZW52LkVOVl9QQVRICn0pOwpwcm9jZXNzLmVudi5OT0RFX0VOViA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCc7Cgp2YXIgb3MgPSByZXF1aXJlKCdvcycpOwoKdmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7Cgp2YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpOwoKdmFyIGNyZWF0ZUNvbmZpZ1Byb3ZpZGVyID0gcmVxdWlyZSgnLi9jb25maWctcHJvdmlkZXInKTsKCnZhciBsb2FkQ29uZmlnRGlyID0gcmVxdWlyZSgnLi9jb25maWctbG9hZGVyJyk7Cgp2YXIgZ2V0UHJlZml4ZWREZXBzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvZ2V0LXByZWZpeGVkLWRlcGVuZGVuY2llcycpOwoKdmFyIGxvYWRQb2xpY2llcyA9IHJlcXVpcmUoJy4uL2xvYWQtcG9saWNpZXMnKTsKCnZhciBsb2FkRnVuY3Rpb25zID0gcmVxdWlyZSgnLi4vbG9hZC1mdW5jdGlvbnMnKTsKCnZhciBfcmVxdWlyZSA9IHJlcXVpcmUocGF0aC5qb2luKF9fZGlybmFtZSwgJy4uLy4uLy4uL3BhY2thZ2UuanNvbicpKSwKICAgIHN0cmFwaVZlcnNpb24gPSBfcmVxdWlyZS52ZXJzaW9uOwoKdmFyIENPTkZJR19QQVRIUyA9IHsKICBhZG1pbjogJ2FkbWluJywKICBhcGk6ICdhcGknLAogIGNvbmZpZzogJ2NvbmZpZycsCiAgY29udHJvbGxlcnM6ICdjb250cm9sbGVycycsCiAgbW9kZWxzOiAnbW9kZWxzJywKICBwbHVnaW5zOiAncGx1Z2lucycsCiAgcG9saWNpZXM6ICdwb2xpY2llcycsCiAgdG1wOiAnLnRtcCcsCiAgc2VydmljZXM6ICdzZXJ2aWNlcycsCiAgc3RhdGljOiAncHVibGljJywKICB2YWxpZGF0b3JzOiAndmFsaWRhdG9ycycsCiAgdmlld3M6ICd2aWV3cycKfTsKdmFyIGRlZmF1bHRDb25maWcgPSB7CiAgc2VydmVyOiB7CiAgICBob3N0OiBwcm9jZXNzLmVudi5IT1NUIHx8IG9zLmhvc3RuYW1lKCkgfHwgJ2xvY2FsaG9zdCcsCiAgICBwb3J0OiBwcm9jZXNzLmVudi5QT1JUIHx8IDEzMzcsCiAgICBwcm94eTogZmFsc2UsCiAgICBjcm9uOiB7CiAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICB9LAogICAgYWRtaW46IHsKICAgICAgYXV0b09wZW46IGZhbHNlCiAgICB9CiAgfSwKICBhZG1pbjoge30sCiAgbWlkZGxld2FyZTogewogICAgdGltZW91dDogMTAwMCwKICAgIGxvYWQ6IHsKICAgICAgYmVmb3JlOiBbJ3Jlc3BvbnNlVGltZScsICdsb2dnZXInLCAnY29ycycsICdyZXNwb25zZXMnLCAnZ3ppcCddLAogICAgICBvcmRlcjogW10sCiAgICAgIGFmdGVyOiBbJ3BhcnNlcicsICdyb3V0ZXInXQogICAgfSwKICAgIHNldHRpbmdzOiB7fQogIH0sCiAgaG9vazogewogICAgdGltZW91dDogMTAwMCwKICAgIGxvYWQ6IHsKICAgICAgYmVmb3JlOiBbXSwKICAgICAgb3JkZXI6IFtdLAogICAgICBhZnRlcjogW10KICAgIH0sCiAgICBzZXR0aW5nczoge30KICB9LAogIHJvdXRlczoge30sCiAgZnVuY3Rpb25zOiB7fSwKICBwb2xpY2llczoge30KfTsKCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGRpcikgewogIHZhciBpbml0aWFsQ29uZmlnID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTsKICB2YXIgX2luaXRpYWxDb25maWckYXV0b1JlID0gaW5pdGlhbENvbmZpZy5hdXRvUmVsb2FkLAogICAgICBhdXRvUmVsb2FkID0gX2luaXRpYWxDb25maWckYXV0b1JlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9pbml0aWFsQ29uZmlnJGF1dG9SZSwKICAgICAgX2luaXRpYWxDb25maWckc2VydmVBID0gaW5pdGlhbENvbmZpZy5zZXJ2ZUFkbWluUGFuZWwsCiAgICAgIHNlcnZlQWRtaW5QYW5lbCA9IF9pbml0aWFsQ29uZmlnJHNlcnZlQSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9pbml0aWFsQ29uZmlnJHNlcnZlQTsKCiAgdmFyIHBrZ0pTT04gPSByZXF1aXJlKHBhdGgucmVzb2x2ZShkaXIsICdwYWNrYWdlLmpzb24nKSk7CgogIHZhciBjb25maWdEaXIgPSBwYXRoLnJlc29sdmUoZGlyIHx8IHByb2Nlc3MuY3dkKCksICdjb25maWcnKTsKICB2YXIgcm9vdENvbmZpZyA9IHsKICAgIGxhdW5jaGVkQXQ6IERhdGUubm93KCksCiAgICBhcHBQYXRoOiBkaXIsCiAgICBwYXRoczogQ09ORklHX1BBVEhTLAogICAgc2VydmVBZG1pblBhbmVsOiBzZXJ2ZUFkbWluUGFuZWwsCiAgICBhdXRvUmVsb2FkOiBhdXRvUmVsb2FkLAogICAgZW52aXJvbm1lbnQ6IHByb2Nlc3MuZW52Lk5PREVfRU5WLAogICAgdXVpZDogXy5nZXQocGtnSlNPTiwgJ3N0cmFwaS51dWlkJyksCiAgICB0ZW1wbGF0ZTogXy5nZXQocGtnSlNPTiwgJ3N0cmFwaS50ZW1wbGF0ZScpLAogICAgaW5mbzogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBwa2dKU09OKSwge30sIHsKICAgICAgc3RyYXBpOiBzdHJhcGlWZXJzaW9uCiAgICB9KSwKICAgIGluc3RhbGxlZFBsdWdpbnM6IGdldFByZWZpeGVkRGVwcygnc3RyYXBpLXBsdWdpbicsIHBrZ0pTT04pLAogICAgaW5zdGFsbGVkTWlkZGxld2FyZXM6IGdldFByZWZpeGVkRGVwcygnc3RyYXBpLW1pZGRsZXdhcmUnLCBwa2dKU09OKSwKICAgIGluc3RhbGxlZEhvb2tzOiBnZXRQcmVmaXhlZERlcHMoJ3N0cmFwaS1ob29rJywgcGtnSlNPTikKICB9OwoKICB2YXIgYmFzZUNvbmZpZyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbG9hZENvbmZpZ0Rpcihjb25maWdEaXIpKSwge30sIHsKICAgIHBvbGljaWVzOiBsb2FkUG9saWNpZXMocGF0aC5yZXNvbHZlKGNvbmZpZ0RpciwgJ3BvbGljaWVzJykpLAogICAgZnVuY3Rpb25zOiBsb2FkRnVuY3Rpb25zKHBhdGgucmVzb2x2ZShjb25maWdEaXIsICdmdW5jdGlvbnMnKSkKICB9KTsKCiAgdmFyIGVudkRpciA9IHBhdGgucmVzb2x2ZShjb25maWdEaXIsICdlbnYnLCBwcm9jZXNzLmVudi5OT0RFX0VOVik7CiAgdmFyIGVudkNvbmZpZyA9IGxvYWRDb25maWdEaXIoZW52RGlyKTsKICByZXR1cm4gY3JlYXRlQ29uZmlnUHJvdmlkZXIoXy5tZXJnZShyb290Q29uZmlnLCBkZWZhdWx0Q29uZmlnLCBiYXNlQ29uZmlnLCBlbnZDb25maWcpKTsKfTs="},{"version":3,"sources":["/Users/admin/Documents/GitHub/autoapi/src/autoapi/lib/core/app-configuration/index.js"],"names":["newLocal","dotenv","require","config","path","process","env","ENV_PATH","NODE_ENV","os","_","createConfigProvider","loadConfigDir","getPrefixedDeps","loadPolicies","loadFunctions","join","__dirname","strapiVersion","version","CONFIG_PATHS","admin","api","controllers","models","plugins","policies","tmp","services","static","validators","views","defaultConfig","server","host","HOST","hostname","port","PORT","proxy","cron","enabled","autoOpen","middleware","timeout","load","before","order","after","settings","hook","routes","functions","module","exports","dir","initialConfig","autoReload","serveAdminPanel","pkgJSON","resolve","configDir","cwd","rootConfig","launchedAt","Date","now","appPath","paths","environment","uuid","get","template","info","strapi","installedPlugins","installedMiddlewares","installedHooks","baseConfig","envDir","envConfig","merge"],"mappings":"AAAA;;;;;;AAEA,IAAMA,QAAQ,GAAG,QAAjB;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACF,QAAD,CAAtB;;AACAC,MAAM,CAACE,MAAP,CAAc;AAAEC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAApB,CAAd;AAEAF,OAAO,CAACC,GAAR,CAAYE,QAAZ,GAAuBH,OAAO,CAACC,GAAR,CAAYE,QAAZ,IAAwB,aAA/C;;AAEA,IAAMC,EAAE,GAAGP,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMQ,CAAC,GAAGR,OAAO,CAAC,QAAD,CAAjB;;AAEA,IAAMS,oBAAoB,GAAGT,OAAO,CAAC,mBAAD,CAApC;;AACA,IAAMU,aAAa,GAAGV,OAAO,CAAC,iBAAD,CAA7B;;AAEA,IAAMW,eAAe,GAAGX,OAAO,CAAC,uCAAD,CAA/B;;AACA,IAAMY,YAAY,GAAGZ,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAMa,aAAa,GAAGb,OAAO,CAAC,mBAAD,CAA7B;;eAEmCA,OAAO,CAACE,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,uBAArB,CAAD,C;IAAzBC,a,YAATC,O;;AAER,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,GAAG,EAAE,KAFc;AAGnBnB,EAAAA,MAAM,EAAE,QAHW;AAInBoB,EAAAA,WAAW,EAAE,aAJM;AAKnBC,EAAAA,MAAM,EAAE,QALW;AAMnBC,EAAAA,OAAO,EAAE,SANU;AAOnBC,EAAAA,QAAQ,EAAE,UAPS;AAQnBC,EAAAA,GAAG,EAAE,MARc;AASnBC,EAAAA,QAAQ,EAAE,UATS;AAUnBC,EAAAA,MAAM,EAAE,QAVW;AAWnBC,EAAAA,UAAU,EAAE,YAXO;AAYnBC,EAAAA,KAAK,EAAE;AAZY,CAArB;AAeA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE7B,OAAO,CAACC,GAAR,CAAY6B,IAAZ,IAAoB1B,EAAE,CAAC2B,QAAH,EAApB,IAAqC,WADrC;AAENC,IAAAA,IAAI,EAAEhC,OAAO,CAACC,GAAR,CAAYgC,IAAZ,IAAoB,IAFpB;AAGNC,IAAAA,KAAK,EAAE,KAHD;AAINC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAJA;AAKNpB,IAAAA,KAAK,EAAE;AAAEqB,MAAAA,QAAQ,EAAE;AAAZ;AALD,GADY;AAQpBrB,EAAAA,KAAK,EAAE,EARa;AASpBsB,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAE,IADC;AAEVC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,CAAC,cAAD,EAAiB,QAAjB,EAA2B,MAA3B,EAAmC,WAAnC,EAAgD,MAAhD,CADJ;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,QAAX;AAHH,KAFI;AAOVC,IAAAA,QAAQ,EAAE;AAPA,GATQ;AAkBpBC,EAAAA,IAAI,EAAE;AACJN,IAAAA,OAAO,EAAE,IADL;AAEJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE,EAArB;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KAFF;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GAlBc;AAuBpBE,EAAAA,MAAM,EAAE,EAvBY;AAwBpBC,EAAAA,SAAS,EAAE,EAxBS;AAyBpB1B,EAAAA,QAAQ,EAAE;AAzBU,CAAtB;;AA4BA2B,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAA6B;AAAA,MAAvBC,aAAuB,uEAAP,EAAO;AAAA,8BACWA,aADX,CACpCC,UADoC;AAAA,MACpCA,UADoC,sCACvB,KADuB;AAAA,8BACWD,aADX,CAChBE,eADgB;AAAA,MAChBA,eADgB,sCACE,IADF;;AAG5C,MAAMC,OAAO,GAAGzD,OAAO,CAACE,IAAI,CAACwD,OAAL,CAAaL,GAAb,EAAkB,cAAlB,CAAD,CAAvB;;AAEA,MAAMM,SAAS,GAAGzD,IAAI,CAACwD,OAAL,CAAaL,GAAG,IAAIlD,OAAO,CAACyD,GAAR,EAApB,EAAmC,QAAnC,CAAlB;AAEA,MAAMC,UAAU,GAAG;AACjBC,IAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL,EADK;AAEjBC,IAAAA,OAAO,EAAEZ,GAFQ;AAGjBa,IAAAA,KAAK,EAAEhD,YAHU;AAIjBsC,IAAAA,eAAe,EAAfA,eAJiB;AAKjBD,IAAAA,UAAU,EAAVA,UALiB;AAMjBY,IAAAA,WAAW,EAAEhE,OAAO,CAACC,GAAR,CAAYE,QANR;AAOjB8D,IAAAA,IAAI,EAAE5D,CAAC,CAAC6D,GAAF,CAAMZ,OAAN,EAAe,aAAf,CAPW;AAQjBa,IAAAA,QAAQ,EAAE9D,CAAC,CAAC6D,GAAF,CAAMZ,OAAN,EAAe,iBAAf,CARO;AASjBc,IAAAA,IAAI,kCACCd,OADD;AAEFe,MAAAA,MAAM,EAAExD;AAFN,MATa;AAajByD,IAAAA,gBAAgB,EAAE9D,eAAe,CAAC,eAAD,EAAkB8C,OAAlB,CAbhB;AAcjBiB,IAAAA,oBAAoB,EAAE/D,eAAe,CAAC,mBAAD,EAAsB8C,OAAtB,CAdpB;AAejBkB,IAAAA,cAAc,EAAEhE,eAAe,CAAC,aAAD,EAAgB8C,OAAhB;AAfd,GAAnB;;AAkBA,MAAMmB,UAAU,mCACXlE,aAAa,CAACiD,SAAD,CADF;AAEdnC,IAAAA,QAAQ,EAAEZ,YAAY,CAACV,IAAI,CAACwD,OAAL,CAAaC,SAAb,EAAwB,UAAxB,CAAD,CAFR;AAGdT,IAAAA,SAAS,EAAErC,aAAa,CAACX,IAAI,CAACwD,OAAL,CAAaC,SAAb,EAAwB,WAAxB,CAAD;AAHV,IAAhB;;AAMA,MAAMkB,MAAM,GAAG3E,IAAI,CAACwD,OAAL,CAAaC,SAAb,EAAwB,KAAxB,EAA+BxD,OAAO,CAACC,GAAR,CAAYE,QAA3C,CAAf;AACA,MAAMwE,SAAS,GAAGpE,aAAa,CAACmE,MAAD,CAA/B;AAEA,SAAOpE,oBAAoB,CAACD,CAAC,CAACuE,KAAF,CAAQlB,UAAR,EAAoB/B,aAApB,EAAmC8C,UAAnC,EAA+CE,SAA/C,CAAD,CAA3B;AACD,CAnCD","sourcesContent":["'use strict';\n\nconst newLocal = 'dotenv';\nconst dotenv = require(newLocal);\ndotenv.config({ path: process.env.ENV_PATH });\n\nprocess.env.NODE_ENV = process.env.NODE_ENV || 'development';\n\nconst os = require('os');\nconst path = require('path');\nconst _ = require('lodash');\n\nconst createConfigProvider = require('./config-provider');\nconst loadConfigDir = require('./config-loader');\n\nconst getPrefixedDeps = require('../../utils/get-prefixed-dependencies');\nconst loadPolicies = require('../load-policies');\nconst loadFunctions = require('../load-functions');\n\nconst { version: strapiVersion } = require(path.join(__dirname, '../../../package.json'));\n\nconst CONFIG_PATHS = {\n  admin: 'admin',\n  api: 'api',\n  config: 'config',\n  controllers: 'controllers',\n  models: 'models',\n  plugins: 'plugins',\n  policies: 'policies',\n  tmp: '.tmp',\n  services: 'services',\n  static: 'public',\n  validators: 'validators',\n  views: 'views',\n};\n\nconst defaultConfig = {\n  server: {\n    host: process.env.HOST || os.hostname() || 'localhost',\n    port: process.env.PORT || 1337,\n    proxy: false,\n    cron: { enabled: false },\n    admin: { autoOpen: false },\n  },\n  admin: {},\n  middleware: {\n    timeout: 1000,\n    load: {\n      before: ['responseTime', 'logger', 'cors', 'responses', 'gzip'],\n      order: [],\n      after: ['parser', 'router'],\n    },\n    settings: {},\n  },\n  hook: {\n    timeout: 1000,\n    load: { before: [], order: [], after: [] },\n    settings: {},\n  },\n  routes: {},\n  functions: {},\n  policies: {},\n};\n\nmodule.exports = (dir, initialConfig = {}) => {\n  const { autoReload = false, serveAdminPanel = true } = initialConfig;\n\n  const pkgJSON = require(path.resolve(dir, 'package.json'));\n\n  const configDir = path.resolve(dir || process.cwd(), 'config');\n\n  const rootConfig = {\n    launchedAt: Date.now(),\n    appPath: dir,\n    paths: CONFIG_PATHS,\n    serveAdminPanel,\n    autoReload,\n    environment: process.env.NODE_ENV,\n    uuid: _.get(pkgJSON, 'strapi.uuid'),\n    template: _.get(pkgJSON, 'strapi.template'),\n    info: {\n      ...pkgJSON,\n      strapi: strapiVersion,\n    },\n    installedPlugins: getPrefixedDeps('strapi-plugin', pkgJSON),\n    installedMiddlewares: getPrefixedDeps('strapi-middleware', pkgJSON),\n    installedHooks: getPrefixedDeps('strapi-hook', pkgJSON),\n  };\n\n  const baseConfig = {\n    ...loadConfigDir(configDir),\n    policies: loadPolicies(path.resolve(configDir, 'policies')),\n    functions: loadFunctions(path.resolve(configDir, 'functions')),\n  };\n\n  const envDir = path.resolve(configDir, 'env', process.env.NODE_ENV);\n  const envConfig = loadConfigDir(envDir);\n\n  return createConfigProvider(_.merge(rootConfig, defaultConfig, baseConfig, envConfig));\n};\n"]}]}