{"remainingRequest":"/Users/admin/Documents/GitHub/autoapi/node_modules/babel-loader/lib/index.js!/Users/admin/Documents/GitHub/autoapi/node_modules/eslint-loader/index.js??ref--13-0!/Users/admin/Documents/GitHub/autoapi/src/autoapi/lib/core/walk.js","dependencies":[{"path":"/Users/admin/Documents/GitHub/autoapi/src/autoapi/lib/core/walk.js","mtime":1604391444000},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/cache-loader/dist/cjs.js","mtime":1603071031830},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/babel-loader/lib/index.js","mtime":1605088291697},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/eslint-loader/index.js","mtime":1603071032704}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiKTsKCnZhciBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciA9IHJlcXVpcmUoIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvR2l0SHViL2F1dG9hcGkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIpOwoKdmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpOwoKdmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7Cgp2YXIgZnNlID0gcmVxdWlyZSgnZnMtZXh0cmEnKTsKCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gd2FsayhkaXIpIHsKICB2YXIgX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge30sCiAgICAgIGxvYWRlciA9IF9yZWYubG9hZGVyOwoKICBhc3NlcnQodHlwZW9mIGxvYWRlciA9PT0gJ2Z1bmN0aW9uJywgJ29wdHMubG9hZGVyIG11c3QgYmUgYSBmdW5jdGlvbicpOwogIHZhciByb290ID0ge307CiAgdmFyIHBhdGhzID0gZnNlLnJlYWRkaXJTeW5jKGRpciwgewogICAgd2l0aEZpbGVUeXBlczogdHJ1ZQogIH0pOwoKICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIocGF0aHMpLAogICAgICBfc3RlcDsKCiAgdHJ5IHsKICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgIHZhciBmZCA9IF9zdGVwLnZhbHVlOwogICAgICB2YXIgbmFtZSA9IGZkLm5hbWU7CiAgICAgIHZhciBmdWxsUGF0aCA9IGRpciArIHBhdGguc2VwICsgbmFtZTsKCiAgICAgIGlmIChmZC5pc0RpcmVjdG9yeSgpKSB7CiAgICAgICAgcm9vdFtuYW1lXSA9IHdhbGsoZnVsbFBhdGgsIHsKICAgICAgICAgIGxvYWRlcjogbG9hZGVyCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIGV4dCA9IHBhdGguZXh0bmFtZShuYW1lKTsKICAgICAgICB2YXIga2V5ID0gcGF0aC5iYXNlbmFtZShuYW1lLCBleHQpOwogICAgICAgIHJvb3Rba2V5XSA9IGxvYWRlcihmdWxsUGF0aCk7CiAgICAgIH0KICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9pdGVyYXRvci5lKGVycik7CiAgfSBmaW5hbGx5IHsKICAgIF9pdGVyYXRvci5mKCk7CiAgfQoKICByZXR1cm4gcm9vdDsKfTs="},{"version":3,"sources":["/Users/admin/Documents/GitHub/autoapi/src/autoapi/lib/core/walk.js"],"names":["assert","require","path","fse","module","exports","walk","dir","loader","root","paths","readdirSync","withFileTypes","fd","name","fullPath","sep","isDirectory","ext","extname","key","basename"],"mappings":"AAAA;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,UAAD,CAAnB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,GAAd,EAAoC;AAAA,iFAAJ,EAAI;AAAA,MAAfC,MAAe,QAAfA,MAAe;;AACnDR,EAAAA,MAAM,CAAC,OAAOQ,MAAP,KAAkB,UAAnB,EAA+B,gCAA/B,CAAN;AAEA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,KAAK,GAAGP,GAAG,CAACQ,WAAJ,CAAgBJ,GAAhB,EAAqB;AAAEK,IAAAA,aAAa,EAAE;AAAjB,GAArB,CAAd;;AAJmD,6CAMpCF,KANoC;AAAA;;AAAA;AAMnD,wDAAsB;AAAA,UAAbG,EAAa;AAAA,UACZC,IADY,GACHD,EADG,CACZC,IADY;AAEpB,UAAMC,QAAQ,GAAGR,GAAG,GAAGL,IAAI,CAACc,GAAX,GAAiBF,IAAlC;;AAEA,UAAID,EAAE,CAACI,WAAH,EAAJ,EAAsB;AACpBR,QAAAA,IAAI,CAACK,IAAD,CAAJ,GAAaR,IAAI,CAACS,QAAD,EAAW;AAAEP,UAAAA,MAAM,EAANA;AAAF,SAAX,CAAjB;AACD,OAFD,MAEO;AACL,YAAMU,GAAG,GAAGhB,IAAI,CAACiB,OAAL,CAAaL,IAAb,CAAZ;AACA,YAAMM,GAAG,GAAGlB,IAAI,CAACmB,QAAL,CAAcP,IAAd,EAAoBI,GAApB,CAAZ;AACAT,QAAAA,IAAI,CAACW,GAAD,CAAJ,GAAYZ,MAAM,CAACO,QAAD,CAAlB;AACD;AACF;AAjBkD;AAAA;AAAA;AAAA;AAAA;;AAmBnD,SAAON,IAAP;AACD,CApBD","sourcesContent":["'use strict';\n\nconst assert = require('assert');\nconst path = require('path');\nconst fse = require('fs-extra');\n\nmodule.exports = function walk(dir, { loader } = {}) {\n  assert(typeof loader === 'function', 'opts.loader must be a function');\n\n  const root = {};\n  const paths = fse.readdirSync(dir, { withFileTypes: true });\n\n  for (let fd of paths) {\n    const { name } = fd;\n    const fullPath = dir + path.sep + name;\n\n    if (fd.isDirectory()) {\n      root[name] = walk(fullPath, { loader });\n    } else {\n      const ext = path.extname(name);\n      const key = path.basename(name, ext);\n      root[key] = loader(fullPath);\n    }\n  }\n\n  return root;\n};\n"]}]}