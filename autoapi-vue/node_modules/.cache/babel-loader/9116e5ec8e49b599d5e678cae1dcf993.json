{"remainingRequest":"/Users/admin/Documents/GitHub/autoapi/node_modules/babel-loader/lib/index.js!/Users/admin/Documents/GitHub/autoapi/node_modules/eslint-loader/index.js??ref--13-0!/Users/admin/Documents/GitHub/autoapi/src/autoapi/lib/utils/get-prefixed-dependencies.js","dependencies":[{"path":"/Users/admin/Documents/GitHub/autoapi/src/autoapi/lib/utils/get-prefixed-dependencies.js","mtime":1604391444000},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/cache-loader/dist/cjs.js","mtime":1603071031830},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/babel-loader/lib/index.js","mtime":1605088291697},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/eslint-loader/index.js","mtime":1603071032704}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN0YXJ0cy13aXRoIik7Cgptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChwcmVmaXgsIHBrZ0pTT04pIHsKICByZXR1cm4gT2JqZWN0LmtleXMocGtnSlNPTi5kZXBlbmRlbmNpZXMpLmZpbHRlcihmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuIGQuc3RhcnRzV2l0aChwcmVmaXgpICYmIGQubGVuZ3RoID4gcHJlZml4Lmxlbmd0aDsKICB9KS5tYXAoZnVuY3Rpb24gKHBrZ05hbWUpIHsKICAgIHJldHVybiBwa2dOYW1lLnN1YnN0cmluZyhwcmVmaXgubGVuZ3RoICsgMSk7CiAgfSk7Cn07"},{"version":3,"sources":["/Users/admin/Documents/GitHub/autoapi/src/autoapi/lib/utils/get-prefixed-dependencies.js"],"names":["module","exports","prefix","pkgJSON","Object","keys","dependencies","filter","d","startsWith","length","map","pkgName","substring"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAASC,OAAT,EAAqB;AACpC,SAAOC,MAAM,CAACC,IAAP,CAAYF,OAAO,CAACG,YAApB,EACJC,MADI,CACG,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,UAAF,CAAaP,MAAb,KAAwBM,CAAC,CAACE,MAAF,GAAWR,MAAM,CAACQ,MAA9C;AAAA,GADJ,EAEJC,GAFI,CAEA,UAAAC,OAAO;AAAA,WAAIA,OAAO,CAACC,SAAR,CAAkBX,MAAM,CAACQ,MAAP,GAAgB,CAAlC,CAAJ;AAAA,GAFP,CAAP;AAGD,CAJD","sourcesContent":["module.exports = (prefix, pkgJSON) => {\n  return Object.keys(pkgJSON.dependencies)\n    .filter(d => d.startsWith(prefix) && d.length > prefix.length)\n    .map(pkgName => pkgName.substring(prefix.length + 1));\n};\n"]}]}