{"remainingRequest":"/Users/admin/Documents/GitHub/autoapi/node_modules/babel-loader/lib/index.js!/Users/admin/Documents/GitHub/autoapi/node_modules/eslint-loader/index.js??ref--13-0!/Users/admin/Documents/GitHub/autoapi/src/autoapi-database/lib/database-manager.js","dependencies":[{"path":"/Users/admin/Documents/GitHub/autoapi/src/autoapi-database/lib/database-manager.js","mtime":1605243945899},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/cache-loader/dist/cjs.js","mtime":1603071031830},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/babel-loader/lib/index.js","mtime":1605088291697},{"path":"/Users/admin/Documents/GitHub/autoapi/node_modules/eslint-loader/index.js","mtime":1603071032704}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOyAvLyBjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7Ci8vIGNvbnN0IHsgY3JlYXRlUXVlcnkgfSA9IHJlcXVpcmUoJy4vcXVlcmllcycpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm1hcCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIik7Cgp2YXIgX2NsYXNzQ2FsbENoZWNrID0gcmVxdWlyZSgiL1VzZXJzL2FkbWluL0RvY3VtZW50cy9HaXRIdWIvYXV0b2FwaS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpOwoKdmFyIGNyZWF0ZUNvbm5lY3RvclJlZ2lzdHJ5ID0gcmVxdWlyZSgnLi9jb25uZWN0b3ItcmVnaXN0cnknKTsgLy8gY29uc3QgY29uc3RhbnRzID0gcmVxdWlyZSgnLi9jb25zdGFudHMnKTsKLy8gY29uc3QgeyB2YWxpZGF0ZU1vZGVsU2NoZW1hcyB9ID0gcmVxdWlyZSgnLi92YWxpZGF0aW9uJyk7CgoKdmFyIERhdGFiYXNlTWFuYWdlciA9IGZ1bmN0aW9uIERhdGFiYXNlTWFuYWdlcihhdXRvYXBpKSB7CiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERhdGFiYXNlTWFuYWdlcik7CgogIHRoaXMuYXV0b2FwaSA9IGF1dG9hcGk7CiAgdGhpcy5pbml0aWFsaXplZCA9IGZhbHNlOwogIHRoaXMuY29ubmVjdG9ycyA9IGNyZWF0ZUNvbm5lY3RvclJlZ2lzdHJ5KHsvLyAgIGNvbm5lY3Rpb25zOiBhdXRvYXBpLmNvbmZpZy5nZXQoJ2RhdGFiYXNlLmNvbm5lY3Rpb25zJyksCiAgICAvLyAgIGRlZmF1bHRDb25uZWN0aW9uOiBhdXRvYXBpLmNvbmZpZy5nZXQoJ2RhdGFiYXNlLmRlZmF1bHRDb25uZWN0aW9uJyksCiAgfSk7CiAgdGhpcy5xdWVyaWVzID0gbmV3IE1hcCgpOwogIHRoaXMubW9kZWxzID0gbmV3IE1hcCgpOwp9IC8vICAgYXN5bmMgaW5pdGlhbGl6ZSgpIHsKLy8gICAgIGlmICh0aGlzLmluaXRpYWxpemVkID09PSB0cnVlKSB7Ci8vICAgICAgIHRocm93IG5ldyBFcnJvcignRGF0YWJhc2UgbWFuYWdlciBhbHJlYWR5IGluaXRpYWxpemVkJyk7Ci8vICAgICB9Ci8vICAgICB0aGlzLmluaXRpYWxpemVkID0gdHJ1ZTsKLy8gICAgIHRoaXMuY29ubmVjdG9ycy5sb2FkKCk7Ci8vICAgICB2YWxpZGF0ZU1vZGVsU2NoZW1hcyh7IGF1dG9hcGk6IHRoaXMuYXV0b2FwaSwgbWFuYWdlcjogdGhpcyB9KTsKLy8gICAgIGF3YWl0IHRoaXMuY29ubmVjdG9ycy5pbml0aWFsaXplKCk7Ci8vICAgICB0aGlzLmluaXRpYWxpemVNb2RlbHNNYXAoKTsKLy8gICAgIHJldHVybiB0aGlzOwovLyAgIH0KLy8gICBpbml0aWFsaXplTW9kZWxzTWFwKCkgewovLyAgICAgT2JqZWN0LmtleXModGhpcy5hdXRvYXBpLm1vZGVscykuZm9yRWFjaChtb2RlbEtleSA9PiB7Ci8vICAgICAgIGNvbnN0IG1vZGVsID0gdGhpcy5hdXRvYXBpLm1vZGVsc1ttb2RlbEtleV07Ci8vICAgICAgIHRoaXMubW9kZWxzLnNldChtb2RlbC51aWQsIG1vZGVsKTsKLy8gICAgIH0pOwovLyAgICAgT2JqZWN0LmtleXModGhpcy5hdXRvYXBpLmFkbWluLm1vZGVscykuZm9yRWFjaChtb2RlbEtleSA9PiB7Ci8vICAgICAgIGNvbnN0IG1vZGVsID0gdGhpcy5hdXRvYXBpLmFkbWluLm1vZGVsc1ttb2RlbEtleV07Ci8vICAgICAgIHRoaXMubW9kZWxzLnNldChtb2RlbC51aWQsIG1vZGVsKTsKLy8gICAgIH0pOwovLyAgICAgT2JqZWN0LmtleXModGhpcy5hdXRvYXBpLnBsdWdpbnMpLmZvckVhY2gocGx1Z2luS2V5ID0+IHsKLy8gICAgICAgT2JqZWN0LmtleXModGhpcy5hdXRvYXBpLnBsdWdpbnNbcGx1Z2luS2V5XS5tb2RlbHMpLmZvckVhY2gobW9kZWxLZXkgPT4gewovLyAgICAgICAgIGNvbnN0IG1vZGVsID0gdGhpcy5hdXRvYXBpLnBsdWdpbnNbcGx1Z2luS2V5XS5tb2RlbHNbbW9kZWxLZXldOwovLyAgICAgICAgIHRoaXMubW9kZWxzLnNldChtb2RlbC51aWQsIG1vZGVsKTsKLy8gICAgICAgfSk7Ci8vICAgICB9KTsKLy8gICB9Ci8vICAgcXVlcnkoZW50aXR5LCBwbHVnaW4pIHsKLy8gICAgIGlmICghZW50aXR5KSB7Ci8vICAgICAgIHRocm93IG5ldyBFcnJvcihgYXJndW1lbnQgZW50aXR5IGlzIHJlcXVpcmVkYCk7Ci8vICAgICB9Ci8vICAgICBjb25zdCBub3JtYWxpemVkTmFtZSA9IGVudGl0eS50b0xvd2VyQ2FzZSgpOwovLyAgICAgLy8gZ2V0IGJ5IHVpZCBvciBuYW1lIC8gcGx1Z2luCi8vICAgICBjb25zdCBtb2RlbCA9IHRoaXMubW9kZWxzLmhhcyhlbnRpdHkpCi8vICAgICAgID8gdGhpcy5tb2RlbHMuZ2V0KGVudGl0eSkKLy8gICAgICAgOiB0aGlzLmdldE1vZGVsKG5vcm1hbGl6ZWROYW1lLCBwbHVnaW4pOwovLyAgICAgaWYgKCFtb2RlbCkgewovLyAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBtb2RlbCAke2VudGl0eX0gY2FuJ3QgYmUgZm91bmQuYCk7Ci8vICAgICB9Ci8vICAgICBpZiAodGhpcy5xdWVyaWVzLmhhcyhtb2RlbC51aWQpKSB7Ci8vICAgICAgIHJldHVybiB0aGlzLnF1ZXJpZXMuZ2V0KG1vZGVsLnVpZCk7Ci8vICAgICB9Ci8vICAgICBjb25zdCBjb25uZWN0b3JRdWVyeSA9IHRoaXMuY29ubmVjdG9ycwovLyAgICAgICAuZ2V0KG1vZGVsLm9ybSkKLy8gICAgICAgLnF1ZXJpZXMoeyBtb2RlbCwgbW9kZWxLZXk6IG1vZGVsLm1vZGVsTmFtZSwgYXV0b2FwaSB9KTsKLy8gICAgIGNvbnN0IHF1ZXJ5ID0gY3JlYXRlUXVlcnkoewovLyAgICAgICBjb25uZWN0b3JRdWVyeSwKLy8gICAgICAgbW9kZWwsCi8vICAgICB9KTsKLy8gICAgIHRoaXMucXVlcmllcy5zZXQobW9kZWwudWlkLCBxdWVyeSk7Ci8vICAgICByZXR1cm4gcXVlcnk7Ci8vICAgfQovLyAgIGdldE1vZGVsKG5hbWUsIHBsdWdpbikgewovLyAgICAgY29uc3Qga2V5ID0gXy50b0xvd2VyKG5hbWUpOwovLyAgICAgaWYgKHRoaXMubW9kZWxzLmhhcyhrZXkpKSByZXR1cm4gdGhpcy5tb2RlbHMuZ2V0KGtleSk7Ci8vICAgICBpZiAocGx1Z2luID09PSAnYWRtaW4nKSB7Ci8vICAgICAgIHJldHVybiBfLmdldChhdXRvYXBpLmFkbWluLCBbJ21vZGVscycsIGtleV0pOwovLyAgICAgfQovLyAgICAgaWYgKHBsdWdpbikgewovLyAgICAgICByZXR1cm4gXy5nZXQoYXV0b2FwaS5wbHVnaW5zLCBbcGx1Z2luLCAnbW9kZWxzJywga2V5XSk7Ci8vICAgICB9Ci8vICAgICByZXR1cm4gXy5nZXQoYXV0b2FwaSwgWydtb2RlbHMnLCBrZXldKSB8fCBfLmdldChhdXRvYXBpLCBbJ2NvbXBvbmVudHMnLCBrZXldKTsKLy8gICB9Ci8vICAgZ2V0TW9kZWxCeUFzc29jKGFzc29jKSB7Ci8vICAgICByZXR1cm4gdGhpcy5nZXRNb2RlbChhc3NvYy5jb2xsZWN0aW9uIHx8IGFzc29jLm1vZGVsLCBhc3NvYy5wbHVnaW4pOwovLyAgIH0KLy8gICBnZXRNb2RlbEJ5Q29sbGVjdGlvbk5hbWUoY29sbGVjdGlvbk5hbWUpIHsKLy8gICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMubW9kZWxzLnZhbHVlcygpKS5maW5kKG1vZGVsID0+IHsKLy8gICAgICAgcmV0dXJuIG1vZGVsLmNvbGxlY3Rpb25OYW1lID09PSBjb2xsZWN0aW9uTmFtZTsKLy8gICAgIH0pOwovLyAgIH0KLy8gICBnZXRNb2RlbEJ5R2xvYmFsSWQoZ2xvYmFsSWQpIHsKLy8gICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMubW9kZWxzLnZhbHVlcygpKS5maW5kKG1vZGVsID0+IHsKLy8gICAgICAgcmV0dXJuIG1vZGVsLmdsb2JhbElkID09PSBnbG9iYWxJZDsKLy8gICAgIH0pOwovLyAgIH0KLy8gICBnZXRNb2RlbHNCeUF0dHJpYnV0ZShhdHRyKSB7Ci8vICAgICBpZiAoYXR0ci50eXBlID09PSAnY29tcG9uZW50JykgewovLyAgICAgICByZXR1cm4gW3RoaXMuZ2V0TW9kZWwoYXR0ci5jb21wb25lbnQpXTsKLy8gICAgIH0KLy8gICAgIGlmIChhdHRyLnR5cGUgPT09ICdkeW5hbWljem9uZScpIHsKLy8gICAgICAgcmV0dXJuIGF0dHIuY29tcG9uZW50cy5tYXAoY29tcG9OYW1lID0+IHRoaXMuZ2V0TW9kZWwoY29tcG9OYW1lKSk7Ci8vICAgICB9Ci8vICAgICBpZiAoYXR0ci5tb2RlbCB8fCBhdHRyLmNvbGxlY3Rpb24pIHsKLy8gICAgICAgcmV0dXJuIFt0aGlzLmdldE1vZGVsQnlBc3NvYyhhdHRyKV07Ci8vICAgICB9Ci8vICAgICByZXR1cm4gW107Ci8vICAgfQovLyAgIGdldE1vZGVsc0J5UGx1Z2luTmFtZShwbHVnaW5OYW1lKSB7Ci8vICAgICBpZiAoIXBsdWdpbk5hbWUpIHsKLy8gICAgICAgcmV0dXJuIGF1dG9hcGkubW9kZWxzOwovLyAgICAgfQovLyAgICAgcmV0dXJuIHBsdWdpbk5hbWUgPT09ICdhZG1pbicgPyBhdXRvYXBpLmFkbWluLm1vZGVscyA6IGF1dG9hcGkucGx1Z2luc1twbHVnaW5OYW1lXS5tb2RlbHM7Ci8vICAgfQovLyAgIGdldFJlc2VydmVkTmFtZXMoKSB7Ci8vICAgICByZXR1cm4gewovLyAgICAgICBtb2RlbHM6IGNvbnN0YW50cy5SRVNFUlZFRF9NT0RFTF9OQU1FUywKLy8gICAgICAgYXR0cmlidXRlczogWwovLyAgICAgICAgIC4uLmNvbnN0YW50cy5SRVNFUlZFRF9BVFRSSUJVVEVfTkFNRVMsCi8vICAgICAgICAgLi4uKGF1dG9hcGkuZGIuY29ubmVjdG9ycy5kZWZhdWx0LmRlZmF1bHRUaW1lc3RhbXBzIHx8IFtdKSwKLy8gICAgICAgXSwKLy8gICAgIH07Ci8vICAgfQo7CgpmdW5jdGlvbiBjcmVhdGVEYXRhYmFzZU1hbmFnZXIoYXV0b2FwaSkgewogIHJldHVybiBuZXcgRGF0YWJhc2VNYW5hZ2VyKGF1dG9hcGkpOwp9Cgptb2R1bGUuZXhwb3J0cyA9IHsKICBjcmVhdGVEYXRhYmFzZU1hbmFnZXI6IGNyZWF0ZURhdGFiYXNlTWFuYWdlcgp9Ow=="},{"version":3,"sources":["/Users/admin/Documents/GitHub/autoapi/src/autoapi-database/lib/database-manager.js"],"names":["createConnectorRegistry","require","DatabaseManager","autoapi","initialized","connectors","queries","Map","models","createDatabaseManager","module","exports"],"mappings":"AAAA,a,CAEA;AAEA;;;;;;;;;;;;AACA,IAAMA,uBAAuB,GAAGC,OAAO,CAAC,sBAAD,CAAvC,C,CACA;AACA;;;IAEMC,e,GACJ,yBAAYC,OAAZ,EAAqB;AAAA;;AACnB,OAAKA,OAAL,GAAeA,OAAf;AAEA,OAAKC,WAAL,GAAmB,KAAnB;AAEA,OAAKC,UAAL,GAAkBL,uBAAuB,CAAC,CAC1C;AACA;AAF0C,GAAD,CAAzC;AAKA,OAAKM,OAAL,GAAe,IAAIC,GAAJ,EAAf;AACA,OAAKC,MAAL,GAAc,IAAID,GAAJ,EAAdqBAAT,CAA+BN,OAA/B,EAAwC;AACtC,SAAO,IAAID,eAAJ,CAAoBC,OAApB,CAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiB;AACfF,EAAAA,qBAAqB,EAArBA;AADe,CAAjB","sourcesContent":["'use strict';\n\n// const _ = require('lodash');\n\n// const { createQuery } = require('./queries');\nconst createConnectorRegistry = require('./connector-registry');\n// const constants = require('./constants');\n// const { validateModelSchemas } = require('./validation');\n\nclass DatabaseManager {\n  constructor(autoapi) {\n    this.autoapi = autoapi;\n\n    this.initialized = false;\n\n    this.connectors = createConnectorRegistry({\n    //   connections: autoapi.config.get('database.connections'),\n    //   defaultConnection: autoapi.config.get('database.defaultConnection'),\n    });\n\n    this.queries = new Map();\n    this.models = new Map();\n  }\n\n//   async initialize() {\n//     if (this.initialized === true) {\n//       throw new Error('Database manager already initialized');\n//     }\n\n//     this.initialized = true;\n\n//     this.connectors.load();\n\n//     validateModelSchemas({ autoapi: this.autoapi, manager: this });\n\n//     await this.connectors.initialize();\n\n//     this.initializeModelsMap();\n\n//     return this;\n//   }\n\n//   initializeModelsMap() {\n//     Object.keys(this.autoapi.models).forEach(modelKey => {\n//       const model = this.autoapi.models[modelKey];\n//       this.models.set(model.uid, model);\n//     });\n\n//     Object.keys(this.autoapi.admin.models).forEach(modelKey => {\n//       const model = this.autoapi.admin.models[modelKey];\n//       this.models.set(model.uid, model);\n//     });\n\n//     Object.keys(this.autoapi.plugins).forEach(pluginKey => {\n//       Object.keys(this.autoapi.plugins[pluginKey].models).forEach(modelKey => {\n//         const model = this.autoapi.plugins[pluginKey].models[modelKey];\n//         this.models.set(model.uid, model);\n//       });\n//     });\n//   }\n\n//   query(entity, plugin) {\n//     if (!entity) {\n//       throw new Error(`argument entity is required`);\n//     }\n\n//     const normalizedName = entity.toLowerCase();\n\n//     // get by uid or name / plugin\n//     const model = this.models.has(entity)\n//       ? this.models.get(entity)\n//       : this.getModel(normalizedName, plugin);\n\n//     if (!model) {\n//       throw new Error(`The model ${entity} can't be found.`);\n//     }\n\n//     if (this.queries.has(model.uid)) {\n//       return this.queries.get(model.uid);\n//     }\n\n//     const connectorQuery = this.connectors\n//       .get(model.orm)\n//       .queries({ model, modelKey: model.modelName, autoapi });\n\n//     const query = createQuery({\n//       connectorQuery,\n//       model,\n//     });\n\n//     this.queries.set(model.uid, query);\n//     return query;\n//   }\n\n//   getModel(name, plugin) {\n//     const key = _.toLower(name);\n\n//     if (this.models.has(key)) return this.models.get(key);\n\n//     if (plugin === 'admin') {\n//       return _.get(autoapi.admin, ['models', key]);\n//     }\n\n//     if (plugin) {\n//       return _.get(autoapi.plugins, [plugin, 'models', key]);\n//     }\n\n//     return _.get(autoapi, ['models', key]) || _.get(autoapi, ['components', key]);\n//   }\n\n//   getModelByAssoc(assoc) {\n//     return this.getModel(assoc.collection || assoc.model, assoc.plugin);\n//   }\n\n//   getModelByCollectionName(collectionName) {\n//     return Array.from(this.models.values()).find(model => {\n//       return model.collectionName === collectionName;\n//     });\n//   }\n\n//   getModelByGlobalId(globalId) {\n//     return Array.from(this.models.values()).find(model => {\n//       return model.globalId === globalId;\n//     });\n//   }\n\n//   getModelsByAttribute(attr) {\n//     if (attr.type === 'component') {\n//       return [this.getModel(attr.component)];\n//     }\n//     if (attr.type === 'dynamiczone') {\n//       return attr.components.map(compoName => this.getModel(compoName));\n//     }\n//     if (attr.model || attr.collection) {\n//       return [this.getModelByAssoc(attr)];\n//     }\n\n//     return [];\n//   }\n\n//   getModelsByPluginName(pluginName) {\n//     if (!pluginName) {\n//       return autoapi.models;\n//     }\n\n//     return pluginName === 'admin' ? autoapi.admin.models : autoapi.plugins[pluginName].models;\n//   }\n\n//   getReservedNames() {\n//     return {\n//       models: constants.RESERVED_MODEL_NAMES,\n//       attributes: [\n//         ...constants.RESERVED_ATTRIBUTE_NAMES,\n//         ...(autoapi.db.connectors.default.defaultTimestamps || []),\n//       ],\n//     };\n//   }\n}\n\nfunction createDatabaseManager(autoapi) {\n  return new DatabaseManager(autoapi);\n}\n\nmodule.exports = {\n  createDatabaseManager,\n};"]}]}